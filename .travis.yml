language: node_js

node_js:
    - '11.6.0'

# Always run two parallel builds: one on mac and one on linux
# the linux build will use wine to be able to build windows and
# linux apps
matrix:
    include:
        - os: osx
          osx_image: xcode10.2
          language: node_js
          node_js: '11.6.0'
          env:
              - ELECTRON_CACHE=$HOME/.cache/electron
              - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

        - os: linux
          dist: trusty
          sudo: required
          services: docker
          language: generic

notifications:
    email: false

# cache some files for faster builds
cache:
    yarn: true
    directories:
        - node_modules
        - $HOME/.cache/electron
        - $HOME/.cache/electron-builder

# add git lfs for large file support
before_install:
    - |
        if [ "$TRAVIS_OS_NAME" == "osx" ]; then
          mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
          export PATH="/tmp/git-lfs:$PATH"
        fi
before_script:
    - git lfs pull

# on PRs and merges to master and prod run tests and build the app
script:
    - |
        if [ "$TRAVIS_OS_NAME" == "linux" ]; then
          docker run --rm \
            -v ${PWD}:/project \
            -v ~/.cache/electron:/root/.cache/electron \
            -v ~/.cache/electron-builder:/root/.cache/electron-builder \
            electronuserland/builder:wine \
            /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn test"
        else
          yarn test
        fi
# only deploy to github on a merge to the prod branch
deploy:
    provider: script
    script: bash deploy.travis.sh
    skip_cleanup: true
    on:
        branch: prod

before_cache:
    - rm -rf $HOME/.cache/electron-builder/wine

# only run this script on pull requests and merges into
# the 'master' and 'prod' branches
branches:
    only:
        - master
        - prod
